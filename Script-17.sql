

--Запрос на основе СУБД ClickHouse


WITH finished_table AS 

(

--Таблица df_all содержит в себе объединенные с помощью UNION ALL таблицы с данными по остановленным посылкам с опасным грузом по 
--четырём городам (Екатеринбург, Новосибирск, Санкт-Петербург, Москва)
WITH df_all AS( 

--Выгружаем только нужные столбцы, переименовываем их, чтобы названия колонок совпадали с названиями в других таблицах. 
--Добавляем колонку rn, выполняющую функцию ROW_NUMBER(), что поможет нам в дальнейшем удалить повторы.
WITH df_ekb AS 
                (SELECT `Склад`, `Накладная` AS `Номер накладной`,`Вложение` AS `Описание вложения`,`Классификация` AS `Причина задержки`,
                        `Название Клиента` AS `Клиент`,`Принявший Офис`,`Количество мест`,`Общий вес`AS `Вес`
                        ,ROW_NUMBER(`Номер накладной`)over(PARTITION BY `Номер накладной` ) as rn                
                FROM  og2.ekb e2),

     df_nsk AS 
                (SELECT `Склад`, `№ накладной` AS `Номер накладной`,`Описание вложения`,`Причина задержки`,`Плательщик` AS `Клиент`,
                `Подразделение` AS `Принявший Офис`,`ШК места` AS `Количество мест`,`Вес к оплате, кг` AS `Вес`
                ,ROW_NUMBER(`Номер накладной`)over(PARTITION BY `Номер накладной` ) as rn 
                FROM og2.nsk),
          
     df_spb AS 
                (SELECT `Склад`, `№ накладной` AS `Номер накладной`,`Описание вложения`,`Причина задержки`,`Плательщик` AS `Клиент`,
                `Подразделение` AS `Принявший Офис`,`ШК места` AS `Количество мест`,`Вес к оплате, кг` AS `Вес`
                ,ROW_NUMBER(`Номер накладной`)over(PARTITION BY `Номер накладной` ) as rn 
                FROM og2.spb),
               
      df_msk AS (SELECT `Склад`,`Номер накладной`,`Описание вложения`,`Причина задержки`,`Плательщик` AS `Клиент`,`Первичный приход` AS `Принявший Офис`,
                 `ШК места` AS `Количество мест`,`Вес к оплате, кг` AS `Вес`
                 ,ROW_NUMBER(`Номер накладной`)over(PARTITION BY `Номер накладной` ) as rn 
                  FROM og2.msk m )
               
SELECT * FROM df_nsk
    UNION ALL SELECT *FROM df_ekb
    UNION ALL SELECT * FROM df_spb
    UNION ALL SELECT * FROM df_msk


)

--Присоединяем таблицу с данными о наличии у клиента договора и таблицу с информацией о виде подразделения (филиал или ПВЗ)
SELECT `Склад`,`Номер накладной`,`Описание вложения`,`Причина задержки`,`Клиент`,`Принявший Офис`,
        `Количество мест`,`Вес`,`Номер договора` AS `Договор`,`Филиал`
FROM df_all
LEFT JOIN og2.contract  ON  df_all.`Номер накладной`=contract.`Накладная`
LEFT JOIN og2.filials f  ON  df_all.`Принявший Офис`=f.`Подразделение`
WHERE  rn=1 AND `Накладная` !=0 


)


--Запрос выгружает всю таблицу
SELECT *
FROM finished_table



--Запрос выгружает количество накладных по каждому городу склада
SELECT `Склад`,count(`Номер накладной`)
FROM finished_table
GROUP BY `Склад`


--Запрос выгружает 10 самых популярных видов опасного вложения в посылке
SELECT `Описание вложения`,count(`Номер накладной`) AS `Количество`
FROM finished_table
GROUP BY `Описание вложения`
ORDER BY `Количество` DESC
LIMIT 10

--Запрос выгружает топ-10 клиентов по количеству нарушений
SELECT `Клиент`, count(`Номер накладной`) AS `Количество`
FROM finished_table
GROUP BY `Клиент`
ORDER BY `Количество` DESC 
LIMIT 10

--Запрос выгружает топ 10-подразделений по количеству нарушений
SELECT `Принявший Офис`, count(`Номер накладной`) AS `Количество`
FROM finished_table
GROUP BY `Принявший Офис`
ORDER BY `Количество` DESC 
LIMIT 10


--Запрос выгружет количество накладных с договором и без, и их процентное соотношение
SELECT `Договор`, count(`Номер накладной`) AS `Количество`,round(count(`Номер накладной`)/sum(`Количество`)over()*100) AS `%`
FROM finished_table
GROUP BY `Договор`











